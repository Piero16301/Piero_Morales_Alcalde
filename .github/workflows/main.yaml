name: piero_morales_alcalde
# This workflow is triggered on pushes to the `main` branch.
# It runs semantic checks, spell checks, tests, builds the application,
# and deploys it to Firebase Hosting.

concurrency:
  group: main-$-$
  cancel-in-progress: true

on:
  push:
    branches:
      - main

jobs:
  check-commit-author:
    name: "👤 Check Commit Author"
    runs-on: ubuntu-latest
    outputs:
      is_bot: ${{ steps.check_author.outputs.is_bot }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 2
      - name: Check commit author
        id: check_author
        run: |
          AUTHOR=$(git log -1 --pretty=format:'%an')
          echo "Commit author: $AUTHOR"
          if [[ "$AUTHOR" == "github-actions[bot]" ]]; then
            echo "is_bot=true" >> $GITHUB_OUTPUT
            echo "Commit was made by github-actions[bot], skipping jobs"
          else
            echo "is_bot=false" >> $GITHUB_OUTPUT
            echo "Commit was made by a user, continuing"
          fi

  semantic-pull-request:
    name: "📝 Semantic"
    uses: VeryGoodOpenSource/very_good_workflows/.github/workflows/semantic_pull_request.yml@v1
    permissions:
      contents: read

  spell-check:
    name: "🔍 Spell Check"
    uses: VeryGoodOpenSource/very_good_workflows/.github/workflows/spell_check.yml@v1
    with:
      includes: |
        **/*.md
      modified_files_only: false

  tests:
    name: "🧪 Run Tests"
    needs: [semantic-pull-request, spell-check]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: 📚 Git Checkout
        uses: actions/checkout@v4
      - name: � Cache Flutter SDK
        uses: actions/cache@v4
        with:
          path: |
            ${{ runner.tool_cache }}/flutter
            ~/.pub-cache
          key: ${{ runner.os }}-flutter-${{ hashFiles('**/pubspec.lock') }}
          restore-keys: |
            ${{ runner.os }}-flutter-
      - name: �🐦 Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: "stable"
          cache: true
      - name: 🔧 Create firebase_options.dart file
        run: |
          cat > lib/firebase_options.dart << 'EOF'
          import 'package:firebase_core/firebase_core.dart' show FirebaseOptions;
          import 'package:flutter/foundation.dart'
              show defaultTargetPlatform, kIsWeb, TargetPlatform;

          class DefaultFirebaseOptions {
            static FirebaseOptions get currentPlatform {
              if (kIsWeb) {
                return web;
              }
              throw UnsupportedError(
                'DefaultFirebaseOptions are not supported for this platform.',
              );
            }

            static final FirebaseOptions web = FirebaseOptions(
              apiKey: '${{ secrets.FIREBASE_WEB_API_KEY }}',
              appId: '${{ secrets.FIREBASE_WEB_APP_ID }}',
              messagingSenderId: '${{ secrets.FIREBASE_WEB_MESSAGING_SENDER_ID }}',
              projectId: '${{ secrets.FIREBASE_WEB_PROJECT_ID }}',
              authDomain: '${{ secrets.FIREBASE_WEB_AUTH_DOMAIN }}',
              storageBucket: '${{ secrets.FIREBASE_WEB_STORAGE_BUCKET }}',
              measurementId: '${{ secrets.FIREBASE_WEB_MEASUREMENT_ID }}',
            );
          }
          EOF
      - name: 📦 Install Dependencies
        run: |
          flutter pub global activate very_good_cli
          very_good packages get --recursive
      - name: 🧪 Run Tests
        run: very_good test --coverage
      - name: 📊 Generate Coverage Badge
        run: |
          dart run test_coverage_badge
      - name: 📊 Upload Coverage Report
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
          if git diff --quiet coverage_badge.svg; then
            echo "No changes to coverage badge, skipping commit"
          else
            git add coverage_badge.svg
            git commit -m "Update coverage badge [skip ci]"
            git push origin main
          fi

  build:
    name: "🔨 Build"
    needs: tests
    runs-on: ubuntu-latest
    steps:
      - name: 📚 Git Checkout
        uses: actions/checkout@v4
      - name: � Cache Flutter SDK
        uses: actions/cache@v4
        with:
          path: |
            ${{ runner.tool_cache }}/flutter
            ~/.pub-cache
          key: ${{ runner.os }}-flutter-${{ hashFiles('**/pubspec.lock') }}
          restore-keys: |
            ${{ runner.os }}-flutter-
      - name: �🐦 Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: "stable"
          cache: true
      - name: 🔧 Create firebase_options.dart file
        run: |
          cat > lib/firebase_options.dart << 'EOF'
          import 'package:firebase_core/firebase_core.dart' show FirebaseOptions;
          import 'package:flutter/foundation.dart'
              show defaultTargetPlatform, kIsWeb, TargetPlatform;

          class DefaultFirebaseOptions {
            static FirebaseOptions get currentPlatform {
              if (kIsWeb) {
                return web;
              }
              throw UnsupportedError(
                'DefaultFirebaseOptions are not supported for this platform.',
              );
            }

            static final FirebaseOptions web = FirebaseOptions(
              apiKey: '${{ secrets.FIREBASE_WEB_API_KEY }}',
              appId: '${{ secrets.FIREBASE_WEB_APP_ID }}',
              messagingSenderId: '${{ secrets.FIREBASE_WEB_MESSAGING_SENDER_ID }}',
              projectId: '${{ secrets.FIREBASE_WEB_PROJECT_ID }}',
              authDomain: '${{ secrets.FIREBASE_WEB_AUTH_DOMAIN }}',
              storageBucket: '${{ secrets.FIREBASE_WEB_STORAGE_BUCKET }}',
              measurementId: '${{ secrets.FIREBASE_WEB_MEASUREMENT_ID }}',
            );
          }
          EOF
      - name: 📦 Install Dependencies
        run: |
          flutter pub global activate very_good_cli
          very_good packages get --recursive
      - name: 🛠️ Build the application
        run: flutter build web -t lib/main.dart
      - name: ⬇️ Archive Production Artifact
        uses: actions/upload-artifact@master
        with:
          name: build
          path: build/web

  deploy:
    name: "🚀 Deploy"
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: 📚 Checkout repo
        uses: actions/checkout@v4
      - name: ⬇️ Download Artifact
        uses: actions/download-artifact@master
        with:
          name: build
          path: build/web
      - name: 🚀 Deploy to firebase
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          firebaseServiceAccount: "${{ secrets.FIREBASE_PROD_SA_KEY }}"
          projectId: "${{ secrets.FIREBASE_PROD_PROJECT_ID }}"
          channelId: live
